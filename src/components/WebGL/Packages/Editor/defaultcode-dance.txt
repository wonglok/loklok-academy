<template>
  <O3D v-if="ready">
    <SwatWalk></SwatWalk>
    <O3D :sx="5" :sy="5" :sz="5" :pz="-50">
      <O3D :px="0" :pz="10" :py="50">
        <!-- You can double click the 0xffffff below -->
        <PointLight :decay="2" :distance="0" :color="0xffffff" :helper="isDev && isOff" :intensity="40 / 100"></PointLight>
      </O3D>

      <O3D :px="0" :pz="-10" :py="50">
        <PointLight :decay="2" :distance="0" :color="0xffffff" :helper="isDev && isOff" :intensity="40 / 100"></PointLight>
      </O3D>

      <O3D :px="25" :pz="25" :py="10">
        <HemisphereLight :color="0xffffff" :floorColor="0xbababa" :helper="isDev && isOff" :intensity="9 / 100"></HemisphereLight>
      </O3D>

      <O3D :px="-25" :pz="25" :py="10">
        <HemisphereLight :color="0xffffff" :floorColor="0xbababa" :helper="isDev && isOff" :intensity="9 / 100"></HemisphereLight>
      </O3D>

      <O3D :px="25" :pz="-25" :py="10">
        <HemisphereLight :color="0xffffff" :floorColor="0xbababa" :helper="isDev && isOff" :intensity="9 / 100"></HemisphereLight>
      </O3D>

      <O3D :px="-25" :pz="-25" :py="10">
        <HemisphereLight :color="0xffffff" :floorColor="0xbababa" :helper="isDev && isOff" :intensity="9 / 100"></HemisphereLight>
      </O3D>

      <AmbinetLight :color="0xffffff" :helper="isDev && isOff" :intensity="16.11 / 100"></AmbinetLight>
    </O3D>

    <O3D :py="30" :ry="-30.83 / 100 * pi" :pz="-26.88">
      <Spaceship :rx="mv * 3.31 / 100"></Spaceship>
    </O3D>

    <ComputeResource :enable="['chroma']">
      <GameNPC :px="10" :pz="-21.64" :char="'glassman'" :dance="'Ymca Dance'"></GameNPC>
      <GameNPC ref="char" :pz="-20" :char="'suzie'" :dance="'Ymca Dance'"></GameNPC>
      <GameNPC :px="-10" :pz="-20" :char="'glassman'" :dance="'Ymca Dance'"></GameNPC>
    </ComputeResource>
  </O3D>
</template>

<script>
let { Vector3, Scene } = THREE
export default {
  data () {
    return {
      mv: 0,
      ready: false
    }
  },
  created () {
  },
  async mounted () {
    this.scene = new Scene()
    this.camera = new PCamera({ element: this.renderRootElement, onResize: this.onResize })
    this.rayplay = new RayPlay({ onResize: this.onResize, onClean: this.onClean, mounter: this.ctx.touchdiv, camera: this.ctx.camera, onLoop: this.onLoop })
    this.scene.add(this.o3d)

    this.onLoop(() => {
      let tt = window.performance.now() * 0.001
      this.mv = Math.sin(tt * 1)
    })

    this.camera.position.y = 13
    this.camera.position.z = 10

    // simple chase camera
    let v3 = new Vector3()
    let lerper = v3.clone()
    this.onLoop(() => {
      if (this.$refs.char) {
        if (this.$refs.char.npc && this.$refs.char.npc.isReady) {
          this.$refs.char.npc.skeleton.mixamorigHead.updateMatrixWorld()
          v3.setFromMatrixPosition(this.$refs.char.npc.skeleton.mixamorigHead.matrixWorld)
          lerper.lerp(v3, 0.1)

          // this.ctx.camera.position.z = 10
          // this.ctx.camera.position.y = v3.y
          this.ctx.camera.lookAt(lerper)
        }
      }
    })

    await Promise.all([
      Actions.preloadByName({ name: 'Ymca Dance' }),
      CharNPC.preloadByName({ name: 'glassman' }),
      CharNPC.preloadByName({ name: 'suzie' })
    ])

    this.ready = true
  }
}
</script>

<style>
/*  */
</style>
